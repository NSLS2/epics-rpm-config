name: Build rpm and container

on:
  pull_request:
    branches:
      - main
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/epics-alma8

jobs:
  build:
    if: github.event_name == 'release' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Free up disk space
      # EPICS build requires ~25GB. Runners have 84GB total but only 14GB free due to pre-installed tools.
      # Remove unused tools (dotnet, ghc, boost, etc.) to free up an additional ~30GB.
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        docker system prune -af

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name == 'release' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=docker,dest=/tmp/image.tar

    - name: Extract RPM from Docker image
      run: |
        docker load -i /tmp/image.tar
        container_id=$(docker create $(docker images -q | head -n1))
        docker cp $container_id:/rpms/. ./rpms/
        docker rm $container_id
        ls -la ./rpms/

    - name: Upload RPM as artifact
      uses: actions/upload-artifact@v4
      with:
        name: epics-bundle-rpm
        path: ./rpms/*.rpm

    - name: Upload RPM to GitHub Release
      if: github.event_name == 'release'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.event.release.tag_name }} ./rpms/*.rpm --clobber

    - name: Test container
      if: github.event_name == 'release'
      run: |
        docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} caget --help
        docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} ls -la /usr/lib64/epics
